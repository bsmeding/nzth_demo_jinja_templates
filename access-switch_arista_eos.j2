! ===== Role / Platform metadata =====
! Role: {{ role.name if role else 'n/a' }}
! Platform: {{ platform.name if platform else 'n/a' }} (napalm={{ platform.napalm_driver if platform else 'n/a' }}, netdriver={{ platform.network_driver if platform else 'n/a' }})
! Location: {{ (location.parent.name ~ ' / ') if location and location.parent }}{{ location.name if location else 'n/a' }}
! Serial: {{ serial }}
! Primary IP: {{ primary_ip4.address if primary_ip4 else 'n/a' }}
{# ===== Arista EOS Intended Config (corrected newlines) ===== #}
{% macro join_sp(items, sep=' ') -%}
  {{ (items or []) | map('string') | join(sep) }}
{%- endmacro %}

{% set cc = config_context or {} %}
{% set ps = cc.get('platform_specific', {}) %}
{% set rs = cc.get('role_specific', {}) %}
{% set features = cc.get('features', {}) %}

! ===== Identity / Banner =====
hostname {{ hostname }}
{% if ps.get('banner', {}).get('motd') %}
banner motd
{{ ps.banner.motd }}
EOF
{% endif %}

! ===== System / Services =====
{% if cc.timezone %}
clock timezone {{ cc.timezone }}
{% endif %}

{% if cc.domain_name %}
dns domain {{ cc.domain_name }}    {# was ip domain-name (deprecated) #}
{% endif %}

{% if cc.dns_servers %}
ip name-server {{ join_sp(cc.dns_servers) }}
{% endif %}

{% if cc.ntp_servers %}
{% if ps.ntp_source_interface %}
ntp local-interface {{ ps.ntp_source_interface }}
{% endif %}
{% for s in cc.ntp_servers %}
ntp server {{ s }}
{% endfor %}
{% endif %}

{% if cc.syslog_hosts %}
{% if ps.get('logging', {}).get('source_interface') %}
logging source-interface {{ ps.logging.source_interface }}
{% endif %}
{% if ps.get('logging', {}).get('buffer_size') %}
logging buffered {{ ps.logging.buffer_size }}
{% endif %}
{% for h in cc.syslog_hosts %}
{% if h.port %}logging host {{ h.host }} {{ h.port }}{% else %}logging host {{ h.host }}{% endif %}
{% endfor %}
{% endif %}

{% if cc.snmp %}
{% if cc.snmp.community %}snmp-server community {{ cc.snmp.community }} ro{% endif %}
{% if cc.snmp.location %}snmp-server location {{ cc.snmp.location }}{% endif %}
{% endif %}

{% if features.lldp is defined %}
{% if features.lldp %}lldp run{% else %}no lldp run{% endif %}
{% endif %}
{% if features.stp %}spanning-tree mode {{ features.stp }}{% endif %}

! ===== Management IP =====
{% set mgmt_if = None %}
{% if primary_ip4 and primary_ip4.interface_assignments and primary_ip4.interface_assignments|length > 0 %}
{% set mgmt_if = primary_ip4.interface_assignments[0].interface.name %}
interface {{ mgmt_if }}
   ip address {{ primary_ip4.address }}
   no shutdown
{% endif %}

! ===== Interfaces =====
{% set allowed_list = rs.get('allowed_vlans', []) %}
{% for iface in interfaces or [] %}
{# skip mgmt interface here to avoid duplicate L3 config #}
{% if mgmt_if and iface.name == mgmt_if %}{% continue %}{% endif %}

interface {{ iface.name }}
   {% if iface.description %}description {{ iface.description }}{% endif %}

   {% set ips = iface.ip_addresses or [] %}
   {% if ips|length > 0 %}
   no switchport
   {% for ip in ips %}ip address {{ ip.address }}
   {% endfor %}
   no shutdown
   {% else %}
     {% if iface.untagged_vlan %}
   switchport
   switchport mode access
       {% if rs.default_vlan is defined %}
   switchport access vlan {{ rs.default_vlan }}
       {% else %}
   ! NOTE: untagged VLAN seen but VID unknown; set role_specific.default_vlan
       {% endif %}
       {% if rs.stp_portfast %}spanning-tree portfast{% endif %}
   no shutdown
     {% elif iface.tagged_vlans and iface.tagged_vlans|length > 0 %}
   switchport
   switchport mode trunk
       {% if allowed_list %}switchport trunk allowed vlan {{ allowed_list | join(',') }}
       {% else %}! NOTE: tagged VLANs exist but only UUIDs available; define role_specific.allowed_vlans
       {% endif %}
   no shutdown
     {% else %}
   switchport
   no shutdown
     {% endif %}
   {% endif %}

   {% if iface.cable %}
   ! cable: status={{ iface.cable.status.name if iface.cable.status else 'n/a' }} type={{ iface.cable.termination_a_type }} color={{ iface.cable.color or 'n/a' }}
   {% endif %}
!
{% endfor %}